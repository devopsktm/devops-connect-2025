name: tag-release
on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Validate tag format
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          if ! [[ $TAG_NAME =~ ^[a-z0-9-]+-v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Tag must follow format: component-name-1.0.0"
            exit 1
          fi

  set-tag:
    needs: validate-tag
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.release.tag_name, 'ui-') }}
    outputs:
      name: ${{ steps.set_tag.outputs.name }}
      version: ${{ steps.set_tag.outputs.version }}
    steps:
      - name: Set component and version
        id: set_tag
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          NAME=${TAG_NAME%-*}
          VERSION=${TAG_NAME##*-}
          
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-push:
    needs: set-tag
    runs-on: ubuntu-latest
    env:
      COMPONENT_NAME: ${{ needs.set-tag.outputs.name }}
      COMPONENT_VERSION: ${{ needs.set-tag.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/connect-github-oicd-aws-role
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession
          role-duration-seconds: 3600
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.COMPONENT_NAME }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.COMPONENT_NAME }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ env.COMPONENT_NAME }}/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/devopsktm/${{ env.COMPONENT_NAME }}:${{ env.COMPONENT_VERSION }}
            ${{ steps.login-ecr.outputs.registry }}/devopsktm/${{ env.COMPONENT_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          platforms: linux/amd64
          provenance: false
